# wsclean_imaging.sub
# script to base submission of GASKAP imaging jobs
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
#  your job. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
universe = docker
docker_image = nipingel/wsclean:wsclean_v3.1

#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.

## imaging
executable = image_channel.sh

## argument: split-out channel for imaging
## set up start and end channels
c = $(Process) + $(start_channel)
chan = $INT(c,%d)

log = wsclean_imaging_chan$(chan).log
output = wsclean_imaging_chan$(chan).out
error = wsclean_imaging_chan$(chan).err
arguments = $(sbid) $(chan) $(mask_file) $(config_file) $(output_prefix)

# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
Requirements=(Target.HasCHTCStaging == true) && (Target.Microarch >= "x86_64-v3")
+HasCHTCStaging=true

# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
transfer_input_files = $(mask_file), $(config_file), image_channel.sh
request_cpus = 4
request_memory = 10GB
request_disk = 22GB
#
# Tell HTCondor to run 700 instances of our job:
queue 700